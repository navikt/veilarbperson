spring.main.banner-mode=off
server.servlet.context-path=/veilarbperson
server.shutdown=graceful

management.endpoint.metrics.enabled=true
management.endpoints.web.base-path=/internal
management.endpoints.web.exposure.include=prometheus
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

# Application environment
# From config map "pto-config"
app.env.openAmDiscoveryUrl=${OPENAM_DISCOVERY_URL}
app.env.openAmRefreshUrl=${VEILARBLOGIN_OPENAM_REFRESH_URL}
app.env.stsDiscoveryUrl=${SECURITY_TOKEN_SERVICE_DISCOVERY_URL}
app.env.abacUrl=${ABAC_PDP_ENDPOINT_URL}
app.env.norg2Url=${NORG2_URL}
app.env.soapStsUrl=${SECURITYTOKENSERVICE_URL}
app.env.naisStsDiscoveryUrl=${SECURITY_TOKEN_SERVICE_DISCOVERY_URL}
app.env.unleashUrl=${UNLEASH_API_URL}

# From nais-{dev|prod}.yaml
app.env.personV3Endpoint=${VIRKSOMHET_PERSON_V3_URL}
app.env.egenAnsattV1Endpoint=${VIRKSOMHET_EGENANSATT_V1_URL}
app.env.krrScope=${KONTAKT_OG_RESERVASJONSREGISTERET_SCOPE}
app.env.skjermedePersonerPipScope=${SKJERMEDE_PERSONER_PIP_SCOPE}
app.env.veilarbregistreringUrl=${VEILARBREGISTRERING_URL}
app.env.veilarbregistreringScope=${VEILARBREGISTRERING_SCOPE}

# From config map "loginservice-idporten"
app.env.loginserviceIdportenAudience=${LOGINSERVICE_IDPORTEN_AUDIENCE}
app.env.loginserviceIdportenDiscoveryUrl=${LOGINSERVICE_IDPORTEN_DISCOVERY_URL}

app.env.naisAadDiscoveryUrl=${AZURE_APP_WELL_KNOWN_URL:null}
app.env.naisAadClientId=${AZURE_APP_CLIENT_ID:null}
app.env.naisAadIssuer=${AZURE_OPENID_CONFIG_ISSUER:null}

# swagger-ui custom path
springdoc.swagger-ui.path=/internal/swagger-ui.html
springdoc.pathsToMatch=/api/**
