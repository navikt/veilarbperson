name: Build, push and deploy
on: push
jobs:
  main:
    name: CI/CD pipeline
    runs-on: ubuntu-latest
    env:
      IMAGE: docker.pkg.github.com/${{ github.repository }}/veilarbperson
      PRINT_PAYLOAD: true
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Set up cache
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build maven artifacts
        run: |
          mvn -B package
      - name: Create image tag
        id: vars
        run: echo ::set-output name=image_tag::$(echo $GITHUB_REF | cut -d '/' -f3).$(date '+%F-%H%M').$(echo $GITHUB_SHA | cut -c1-7)
      - name: Build and push Docker image
        if: github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker build -t ${IMAGE}:${{ steps.vars.outputs.image_tag }} .
          docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
          docker push ${IMAGE}:${{ steps.vars.outputs.image_tag }}
      - name: Create release
        if: github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/master'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.vars.outputs.image_tag }}
          release_name: ${{ steps.vars.outputs.image_tag }}
      - name: Deploy application to Q0
        uses: nais/deploy/actions/deploy@v1
        if: github.ref == 'refs/heads/dev'
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: nais-q.yaml
          VAR: version=${{ steps.vars.outputs.image_tag }},namespace=q0
      - name: Deploy application to Q1
        uses: nais/deploy/actions/deploy@v1
        if: github.ref == 'refs/heads/dev'
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: nais-q.yaml
          VAR: version=${{ steps.vars.outputs.image_tag }},namespace=q1
      - name: Deploy application to prod
        uses: nais/deploy/actions/deploy@v1
        if: github.ref == 'refs/heads/master'
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-fss
          RESOURCE: nais.yaml
          VAR: version=${{ steps.vars.outputs.image_tag }}
